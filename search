<!DOCTYPE html>
<html lang="ru">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>–ü–æ–∏—Å–∫ –ø–æ —Å—Ç–∞—Ç—å–µ</title>
    <style>
        .search-widget {
            font-family: Arial, sans-serif;
            padding: 15px;
            background: #f8f9fa;
            border-radius: 8px;
            margin: 10px 0;
        }
        .search-input {
            width: 70%;
            padding: 8px;
            margin-right: 10px;
            border: 1px solid #ddd;
            border-radius: 4px;
        }
        .search-btn {
            padding: 8px 15px;
            background: #007bff;
            color: white;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }
        .search-btn:hover {
            background: #0056b3;
        }
        .results {
            margin-top: 15px;
        }
        .result-item {
            background: white;
            padding: 10px;
            margin: 5px 0;
            border-radius: 4px;
            cursor: pointer;
            border-left: 3px solid #007bff;
        }
        .result-item:hover {
            background: #e3f2fd;
        }
        .highlight {
            background-color: yellow;
            font-weight: bold;
        }
    </style>
</head>
<body>
    <div class="search-widget">
        <h3>üîç –ü–æ–∏—Å–∫ –ø–æ —Å—Ç–∞—Ç—å–µ</h3>
        <input type="text" class="search-input" id="searchInput" placeholder="–í–≤–µ–¥–∏—Ç–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ...">
        <button class="search-btn" onclick="searchInArticle()">–ù–∞–π—Ç–∏</button>
        <button class="search-btn" onclick="clearSearch()" style="background: #6c757d;">–û—á–∏—Å—Ç–∏—Ç—å</button>
        
        <div class="results" id="results"></div>
    </div>

    <script>
        // –≠—Ç–∞ —Ñ—É–Ω–∫—Ü–∏—è –±—É–¥–µ—Ç –∏—Å–∫–∞—Ç—å –ø–æ –≤—Å–µ–π —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–π —Å—Ç—Ä–∞–Ω–∏—Ü–µ (—Å—Ç–∞—Ç—å–µ TEAMLY)
        function searchInArticle() {
            const searchTerm = document.getElementById('searchInput').value.trim();
            if (!searchTerm) return;

            try {
                // –ü–æ–ª—É—á–∞–µ–º –¥–æ—Å—Ç—É–ø –∫ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–º—É –¥–æ–∫—É–º–µ–Ω—Ç—É (—Å—Ç–∞—Ç—å–µ TEAMLY)
                const parentDocument = window.parent.document;
                const resultsContainer = document.getElementById('results');
                resultsContainer.innerHTML = '';
                
                let resultCount = 0;
                
                // –ò—â–µ–º —Å–ø–æ–π–ª–µ—Ä—ã - –ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ —Å–µ–ª–µ–∫—Ç–æ—Ä—ã
                const spoilerSelectors = [
                    'details', 
                    '[class*="spoiler"]', 
                    '[class*="collapse"]',
                    '.spoiler',
                    '.accordion',
                    '.toggle'
                ];
                
                let spoilers = [];
                spoilerSelectors.forEach(selector => {
                    const found = parentDocument.querySelectorAll(selector);
                    if (found.length > 0) {
                        spoilers = found;
                    }
                });
                
                if (spoilers.length === 0) {
                    // –ï—Å–ª–∏ –Ω–µ –Ω–∞—à–ª–∏ —Å–ø–æ–π–ª–µ—Ä—ã, –∏—â–µ–º –ø–æ –≤—Å–µ–º—É —Ç–µ–∫—Å—Ç—É
                    spoilers = [parentDocument.body];
                }

                spoilers.forEach((spoiler, index) => {
                    const textContent = spoiler.textContent.toLowerCase();
                    const searchTermLower = searchTerm.toLowerCase();
                    
                    if (textContent.includes(searchTermLower)) {
                        resultCount++;
                        
                        // –ü—ã—Ç–∞–µ–º—Å—è —Ä–∞—Å–∫—Ä—ã—Ç—å —Å–ø–æ–π–ª–µ—Ä
                        try {
                            if (spoiler.tagName === 'DETAILS') {
                                spoiler.open = true;
                            } else if (spoiler.click) {
                                // –î–ª—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —Å–ø–æ–π–ª–µ—Ä–æ–≤
                                const toggleBtn = spoiler.querySelector('[class*="toggle"], [class*="spoiler"]') || spoiler;
                                toggleBtn.click();
                            }
                        } catch (e) {
                            console.log('–ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–∫—Ä—ã—Ç—å —Å–ø–æ–π–ª–µ—Ä:', e);
                        }
                        
                        // –ü–æ–¥—Å–≤–µ—á–∏–≤–∞–µ–º —Ç–µ–∫—Å—Ç
                        highlightText(spoiler, searchTerm);
                        
                        // –î–æ–±–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤–∏–¥–∂–µ—Ç
                        const resultElement = document.createElement('div');
                        resultElement.className = 'result-item';
                        resultElement.innerHTML = `
                            <strong>–†–µ–∑—É–ª—å—Ç–∞—Ç ${resultCount}:</strong><br>
                            ${getSnippet(spoiler.textContent, searchTerm)}
                        `;
                        resultElement.onclick = () => {
                            spoiler.scrollIntoView({ behavior: 'smooth' });
                        };
                        resultsContainer.appendChild(resultElement);
                    }
                });
                
                if (resultCount === 0) {
                    resultsContainer.innerHTML = '<div class="result-item">–ù–∏—á–µ–≥–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ</div>';
                } else {
                    const summary = document.createElement('div');
                    summary.className = 'result-item';
                    summary.innerHTML = `<strong>–ù–∞–π–¥–µ–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: ${resultCount}</strong>`;
                    resultsContainer.insertBefore(summary, resultsContainer.firstChild);
                }
                
            } catch (error) {
                document.getElementById('results').innerHTML = 
                    '<div class="result-item">–û—à–∏–±–∫–∞ –¥–æ—Å—Ç—É–ø–∞ –∫ —Å–æ–¥–µ—Ä–∂–∏–º–æ–º—É —Å—Ç–∞—Ç—å–∏</div>';
                console.error('–û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞:', error);
            }
        }

        function highlightText(element, searchTerm) {
            const regex = new RegExp(`(${searchTerm})`, 'gi');
            element.innerHTML = element.innerHTML.replace(regex, '<span class="highlight">$1</span>');
        }

        function getSnippet(text, term) {
            const index = text.toLowerCase().indexOf(term.toLowerCase());
            const start = Math.max(0, index - 50);
            const end = Math.min(text.length, index + term.length + 50);
            let snippet = text.substring(start, end);
            
            if (start > 0) snippet = '...' + snippet;
            if (end < text.length) snippet = snippet + '...';
            
            return snippet.replace(new RegExp(term, 'gi'), '<span class="highlight">$&</span>');
        }

        function clearSearch() {
            try {
                const parentDocument = window.parent.document;
                // –£–±–∏—Ä–∞–µ–º –ø–æ–¥—Å–≤–µ—Ç–∫—É
                parentDocument.querySelectorAll('.highlight').forEach(el => {
                    el.outerHTML = el.innerHTML;
                });
            } catch (e) {
                console.log('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ:', e);
            }
            document.getElementById('results').innerHTML = '';
            document.getElementById('searchInput').value = '';
        }

        // –ü–æ–∏—Å–∫ –ø—Ä–∏ –Ω–∞–∂–∞—Ç–∏–∏ Enter
        document.getElementById('searchInput').addEventListener('keypress', function(e) {
            if (e.key === 'Enter') {
                searchInArticle();
            }
        });
    </script>
</body>
</html>
